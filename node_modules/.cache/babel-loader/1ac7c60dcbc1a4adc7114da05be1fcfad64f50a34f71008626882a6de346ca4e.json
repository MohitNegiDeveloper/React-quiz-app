{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Ftechiz sol\\\\React Project\\\\website\\\\my-react-app\\\\src\\\\Components\\\\quizzuserinterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nconst QuizUI = () => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const handleOptionClick = selectedAnswer => {\n    // Check if selectedAnswer is correct\n    if (selectedAnswer === QuizData[currentQuestion].correct_answer) {\n      setScore(score + 1);\n    }\n\n    // Move to the next question\n    if (currentQuestion < QuizData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    }\n  };\n  const handleRestart = () => {\n    setCurrentQuestion(0);\n    setScore(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentQuestion < QuizData.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: QuizData[currentQuestion].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [QuizData[currentQuestion].incorrect_answers.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleOptionClick(option),\n                disabled: score > 0,\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleOptionClick(QuizData[currentQuestion].correct_answer),\n                disabled: score > 0,\n                children: QuizData[currentQuestion].correct_answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Congratulations!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your final score: \", score, \"/\", QuizData.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRestart,\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizUI, \"T41DzXNL5iLXoze+eiFUml9SzVE=\");\n_c = QuizUI;\nexport default QuizUI;\nvar _c;\n$RefreshReg$(_c, \"QuizUI\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuizUI","_s","currentQuestion","setCurrentQuestion","score","setScore","handleOptionClick","selectedAnswer","QuizData","correct_answer","length","handleRestart","children","className","question","fileName","_jsxFileName","lineNumber","columnNumber","incorrect_answers","map","option","index","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/Ftechiz sol/React Project/website/my-react-app/src/Components/quizzuserinterface.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n;\n\nconst QuizUI = () => {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n\n  const handleOptionClick = (selectedAnswer) => {\n    // Check if selectedAnswer is correct\n    if (selectedAnswer === QuizData[currentQuestion].correct_answer) {\n      setScore(score + 1);\n    }\n\n    // Move to the next question\n    if (currentQuestion < QuizData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    }\n  };\n\n  const handleRestart = () => {\n    setCurrentQuestion(0);\n    setScore(0);\n  };\n\n  return (\n    <div>\n      {currentQuestion < QuizData.length ? (\n        <div className=\"card\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h3>{QuizData[currentQuestion].question}</h3>\n              <hr />\n            </div>\n            <div className=\"col\">\n              <ul>\n                    {QuizData[currentQuestion].incorrect_answers.map(\n                  (option, index) => (\n                    <li key={index}>\n                      <button\n                        onClick={() => handleOptionClick(option)}\n                        disabled={score > 0}\n                      >\n                        {option}\n                      </button>\n                    </li>\n                  )\n                )}\n                <li>\n                  <button\n                    onClick={() =>\n                      handleOptionClick(\n                        QuizData[currentQuestion].correct_answer\n                      )\n                    }\n                    disabled={score > 0}\n                  >\n                    {QuizData[currentQuestion].correct_answer}\n                  </button>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div>\n          <h3>Congratulations!</h3>\n          <p>\n            Your final score: {score}/{QuizData.length}\n          </p>\n          <button onClick={handleRestart}>Try Again</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default QuizUI;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}