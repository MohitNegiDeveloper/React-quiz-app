{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProject\\\\React-Quiz-App\\\\src\\\\Form\\\\Logging.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport Challenges from \"../Quizz/main\";\nimport Header from '../Components/header';\n\n// Simulated function to send email (replace with actual API call)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sendEmail = data => {\n  console.log(\"Sending data to email:\", data);\n  // You can replace this with an actual email sending logic (e.g., using an API)\n};\nconst Login = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [userData, setUserData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserData({\n      ...userData,\n      [name]: value\n    });\n  };\n  const handleRegister = e => {\n    e.preventDefault();\n    if (userData.email && userData.password) {\n      // Simulating registration\n      setIsRegistered(true);\n      sendEmail(userData); // Simulate sending to email\n      alert(\"Registration successful!\");\n    } else {\n      setError(\"Please fill in all fields.\");\n    }\n  };\n  const handleLogin = e => {\n    e.preventDefault();\n    if (isRegistered && userData.email && userData.password) {\n      // Simulating login\n      setIsLoggedIn(true);\n      alert(\"Login successful!\");\n    } else {\n      setError(\"Please register first or fill in all fields.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quiz App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), !isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isRegistered ? \"Login\" : \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: isRegistered ? handleLogin : handleRegister,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Email\",\n            value: userData.email,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Password\",\n            value: userData.password,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: isRegistered ? \"Login\" : \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsRegistered(!isRegistered),\n          children: isRegistered ? \"Create an account\" : \"Already have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome! You are logged in.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/quiz\",\n          children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"ZrEgsLANQpuVsaQFt0d9z/NUm98=\");\n_c = Login;\nconst Quiz = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Challenges, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Quiz;\nexport default Login;\nvar _c, _c2;\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"Quiz\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Link","Challenges","Header","jsxDEV","_jsxDEV","sendEmail","data","console","log","Login","_s","isLoggedIn","setIsLoggedIn","isRegistered","setIsRegistered","userData","setUserData","email","password","error","setError","handleInputChange","e","name","value","target","handleRegister","preventDefault","alert","handleLogin","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","onClick","to","_c","Quiz","_c2","$RefreshReg$"],"sources":["D:/ReactProject/React-Quiz-App/src/Form/Logging.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport Challenges from \"../Quizz/main\";\nimport Header from '../Components/header';\n\n// Simulated function to send email (replace with actual API call)\nconst sendEmail = (data) => {\n    console.log(\"Sending data to email:\", data);\n    // You can replace this with an actual email sending logic (e.g., using an API)\n};\n\nconst Login = () => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [isRegistered, setIsRegistered] = useState(false);\n    const [userData, setUserData] = useState({ email: \"\", password: \"\" });\n    const [error, setError] = useState(\"\");\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setUserData({ ...userData, [name]: value });\n    };\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        if (userData.email && userData.password) {\n            // Simulating registration\n            setIsRegistered(true);\n            sendEmail(userData); // Simulate sending to email\n            alert(\"Registration successful!\");\n        } else {\n            setError(\"Please fill in all fields.\");\n        }\n    };\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        if (isRegistered && userData.email && userData.password) {\n            // Simulating login\n            setIsLoggedIn(true);\n            alert(\"Login successful!\");\n        } else {\n            setError(\"Please register first or fill in all fields.\");\n        }\n    };\n\n    return (\n        <Router>\n            <div className=\"App\">\n                <h1>Quiz App</h1>\n                {!isLoggedIn ? (\n                    <div>\n                        <h2>{isRegistered ? \"Login\" : \"Register\"}</h2>\n                        <form onSubmit={isRegistered ? handleLogin : handleRegister}>\n                            <input\n                                type=\"email\"\n                                name=\"email\"\n                                placeholder=\"Email\"\n                                value={userData.email}\n                                onChange={handleInputChange}\n                                required\n                            />\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                value={userData.password}\n                                onChange={handleInputChange}\n                                required\n                            />\n                            <button type=\"submit\">\n                                {isRegistered ? \"Login\" : \"Register\"}\n                            </button>\n                        </form>\n                        <p>{error}</p>\n                        <button onClick={() => setIsRegistered(!isRegistered)}>\n                            {isRegistered ? \"Create an account\" : \"Already have an account?\"}\n                        </button>\n                    </div>\n                ) : (\n                    <div>\n                        <h2>Welcome! You are logged in.</h2>\n                        <Link to=\"/quiz\">\n                            <Header/>\n                        </Link>\n                    </div>\n                )}\n                {/* <Routes>\n                    <Route\n                        path=\"/quiz\"\n                        element={\n                            isLoggedIn ? <Quiz /> : <div>Please log in to take the quiz.</div>\n                        }\n                    />\n                </Routes> */}\n            </div>\n        </Router>\n    );\n};\n\nconst Quiz = () => {\n    return (\n        <div>\n            <Challenges/>\n            \n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,QAAQ,kBAAkB;AAC/E,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,MAAM,MAAM,sBAAsB;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAIC,IAAI,IAAK;EACxBC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,IAAI,CAAC;EAC3C;AACJ,CAAC;AAED,MAAMG,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC;IAAEsB,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EACrE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM0B,iBAAiB,GAAIC,CAAC,IAAK;IAC7B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCT,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACQ,IAAI,GAAGC;IAAM,CAAC,CAAC;EAC/C,CAAC;EAED,MAAME,cAAc,GAAIJ,CAAC,IAAK;IAC1BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAIZ,QAAQ,CAACE,KAAK,IAAIF,QAAQ,CAACG,QAAQ,EAAE;MACrC;MACAJ,eAAe,CAAC,IAAI,CAAC;MACrBT,SAAS,CAACU,QAAQ,CAAC,CAAC,CAAC;MACrBa,KAAK,CAAC,0BAA0B,CAAC;IACrC,CAAC,MAAM;MACHR,QAAQ,CAAC,4BAA4B,CAAC;IAC1C;EACJ,CAAC;EAED,MAAMS,WAAW,GAAIP,CAAC,IAAK;IACvBA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAId,YAAY,IAAIE,QAAQ,CAACE,KAAK,IAAIF,QAAQ,CAACG,QAAQ,EAAE;MACrD;MACAN,aAAa,CAAC,IAAI,CAAC;MACnBgB,KAAK,CAAC,mBAAmB,CAAC;IAC9B,CAAC,MAAM;MACHR,QAAQ,CAAC,8CAA8C,CAAC;IAC5D;EACJ,CAAC;EAED,oBACIhB,OAAA,CAACP,MAAM;IAAAiC,QAAA,eACH1B,OAAA;MAAK2B,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAChB1B,OAAA;QAAA0B,QAAA,EAAI;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChB,CAACxB,UAAU,gBACRP,OAAA;QAAA0B,QAAA,gBACI1B,OAAA;UAAA0B,QAAA,EAAKjB,YAAY,GAAG,OAAO,GAAG;QAAU;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9C/B,OAAA;UAAMgC,QAAQ,EAAEvB,YAAY,GAAGgB,WAAW,GAAGH,cAAe;UAAAI,QAAA,gBACxD1B,OAAA;YACIiC,IAAI,EAAC,OAAO;YACZd,IAAI,EAAC,OAAO;YACZe,WAAW,EAAC,OAAO;YACnBd,KAAK,EAAET,QAAQ,CAACE,KAAM;YACtBsB,QAAQ,EAAElB,iBAAkB;YAC5BmB,QAAQ;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACF/B,OAAA;YACIiC,IAAI,EAAC,UAAU;YACfd,IAAI,EAAC,UAAU;YACfe,WAAW,EAAC,UAAU;YACtBd,KAAK,EAAET,QAAQ,CAACG,QAAS;YACzBqB,QAAQ,EAAElB,iBAAkB;YAC5BmB,QAAQ;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACF/B,OAAA;YAAQiC,IAAI,EAAC,QAAQ;YAAAP,QAAA,EAChBjB,YAAY,GAAG,OAAO,GAAG;UAAU;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eACP/B,OAAA;UAAA0B,QAAA,EAAIX;QAAK;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACd/B,OAAA;UAAQqC,OAAO,EAAEA,CAAA,KAAM3B,eAAe,CAAC,CAACD,YAAY,CAAE;UAAAiB,QAAA,EACjDjB,YAAY,GAAG,mBAAmB,GAAG;QAA0B;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,gBAEN/B,OAAA;QAAA0B,QAAA,gBACI1B,OAAA;UAAA0B,QAAA,EAAI;QAA2B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpC/B,OAAA,CAACJ,IAAI;UAAC0C,EAAE,EAAC,OAAO;UAAAZ,QAAA,eACZ1B,OAAA,CAACF,MAAM;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB,CAAC;AAACzB,EAAA,CAtFID,KAAK;AAAAkC,EAAA,GAALlC,KAAK;AAwFX,MAAMmC,IAAI,GAAGA,CAAA,KAAM;EACf,oBACIxC,OAAA;IAAA0B,QAAA,eACI1B,OAAA,CAACH,UAAU;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEZ,CAAC;AAEd,CAAC;AAACU,GAAA,GAPID,IAAI;AASV,eAAenC,KAAK;AAAC,IAAAkC,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}